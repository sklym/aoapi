FORMAT: 1A
HOST: http://server.aouk.co.uk/api/v1

# AO Core API

AO is a simple API allowing consumers to view products and items.

# AO Core API Root [/]

This resource does not have any attributes. Instead it offers the initial
API affordances in the form of the links in the JSON body.

It is recommend to follow the “url” link values,
[Link](https://tools.ietf.org/html/rfc5988) or Location headers where
applicable to retrieve resources. Instead of constructing your own URLs,
to keep your client decoupled from implementation details.

## Retrieve the Entry Point [GET]

+ Response 200 (application/json)

        {
            "product_url": "/products",
            "copy_url": "/copies",
            "price_url": "/prices",
            "picture_url": "/pictures",
        }

## Group Copy

Resources related to copies in the API.

## Copies Collection [/copies?limit={limit_num}&offset={offset_num}&profile={profile_name}]

+ length
+ offset
+ total
+ copies - An array of Copy objects.

+ Parameters
    + limit_num (optional, number, `10`) ... Maximum number of posts to retrieve 
        + Default: `10`
    + offset_num (optional, number, `0`) ... offset
    + profile_name (optional, string, `hotels`) ... profile

### List All Copies [GET]

+ Response 200 (application/json)

    + Headers
        
            Link: </copies?limit=10&offset=10&profile=hotels>; rel="next"
            
    + Body

                {
                    "length": 3,
                    "offset": 0,
                    "total": 3,
                    "copies": [{
                            "id": 1,
                            "name": "copy_name_1",
                            "fields": [
                                "Content" : "copy example 1",
                                "Language" : "en",
                                "Comments" : ""  
                            ]
                    }, {
                            "id": 2,
                            "name": "copy_name_2",
                            "fields": [
                                "Content" : "copy example 2",
                                "Language" : "en",
                                "Comments" : ""  
                            ]
                    }, {
                            "id": 3,
                            "name": "copy_name_3",
                            "fields": [
                                "Content" : "copy example 3",
                                "Language" : "en",
                                "Comments" : ""  
                            ]
                    }]
                }

## Retrive a Copy by id [/copies/{copy_id}?profile={profile_name}]

+ id - serial number of copy.
+ name - name of copy.
+ fields - An array of copy fields.

+ Parameters
    + copy_id (required, number, `1`) ... Serial Number of the Copy
    + profile_name (optional, string, `hotels`) ... profile

### View a Copy Detail [GET]
+ Response 200 (application/json)

        {
            "id": 1,
            "name": "copy_name_1",
            "fields": [
                "Content" : "copy example 1",
                "Language" : "en",
                "Comments" : ""  
            ]
        }

## Retrive a Copy by name [/copies/{copy_name}/name?profile={profile_name}]

May return many copies!

+ id - serial number of copy.
+ name - name of copy.
+ fields - An array of copy fields.

+ Parameters
    + copy_name (required, string, `copy_name_1`) ... Name of the Copy
    + profile_name (optional, string, `hotels`) ... profile

### View a Copy Detail [GET]
+ Response 200 (application/json)

        {
            "id": 1,
            "name": "copy_name_1",
            "fields": [
                "Content" : "copy example 1",
                "Language" : "en",
                "Comments" : ""  
            ]
        }

## Create a new Copy [/copies]

### Create a New Copy [POST]

+ Request (application/json)

    + Body
        
            {
                "name": "copy_name_4",
                "fields": [
                    "Content" : "copy example 4",
                    "Language" : "en",
                    "Comments" : ""  
                ]
            }
    
+ Response 201

    + Headers
            
            Location: /copies/4

## Update/Delete a Copy [/copies/{copy_id}]

+ Parameters
    + copy_id (required, number, `3`) ... Serial Number of Copy

### Update a Copy [PUT]

+ Request (application/json)

    + Body
    
            {
                "fields": [
                    "Content" : "copy example 3 Updated"
                ]
            }
        
+ Response 204

    + Headers
    
            Location: /copies/3

### Delete a Copy [DELETE]

+ Response 204

## Group Product

Resources related to products in the API.

## Products Collection [/products?limit={limit_num}&offset={offset_num}&profile={profile_name}]

+ Response
    +limit_num (optional, number, `10`) ... Maximum number of posts to retrieve 
        + Default: `10`
    + offset_num (optional, number, `0`) ... offset
    + profile_name (optional, string, `hotels`) ... profile

### List All Products [GET]

+ Response 200 (application/json)

    + Headers
    
            Link: </products?offset=10>; rel="next"
            
    + Body
    
            {
                "length": 10,
                "offset": 0,
                "total": 3000,
                "products": [{
                    "id": 1,
                    "name": "Test Product 1",
                    "fields":[
                        "Description": "Description",
                        "Supplier": "Supplier"]
                    },{
                    "id": 2,
                    "name": "Test Product 2",
                    "fields":[
                        "Description": "Description",
                        "Supplier": "Supplier"]
                    },{
                    "id": 3,
                    "name": "Test Product 3",
                    "fields":[
                        "Description": "Description",
                        "Supplier": "Supplier"]
                    }]
            }

## Product [/products/{sku_id}]

+ 
+ Parameters
    + sku_id (required, number, `1`) ... ID of the Product

### View a Product Detail [GET]

+ Response 200 (application/json)

        {
            "id": 1,
            "name": "Test Product 1",
            "fields":[
                "Description": "Description",
                "Supplier": "Supplier"
            ]
        }

### Update a Product [PUT]

+ Request (application/json)

        {
        "fields":[
                "Description": "Description Updated"
            ]
        }
        
+ Response 204

    + Headers
    
            Location: /products/3
            
### Delete a Product [DELETE]

+ Response 204

## Create a Product [/products]

### Create a Product [POST]

+ Request (application/json)

        {
            "name": "Test Product 4",
            "fields":[
                "Description": "Description",
                "Supplier": "Supplier"
            ]
        }
        
+ Response 201

    + Headers
    
            Location: /products/4

## Group Product Link

## All Links [/products/{sku_id}/links]

+ Parameters
    + sku_id (required, number) ... ID of the Product

### List All Links [GET]

+ Response 200 (application/json)

        {
            "owner": "Test Product 1",
            "total": 2,
            "links": [{
                "type": "copy",
                "id": 1,
                "name": "copy_name_1"
            }, {
                "type": "price",
                "id": 5,
                "name": "GP-01"
            }]
        }
        
### Link to Product [POST]

+ Request (application/json)

        {
            "links": [{
                "type": "copy",
                "id": 1
            }, {
                "type": "price",
                "id": 5
            }]
        }
        
+ Response 201

    + Headers
    
            Location: /products/4/links

### UnLink from Product [DELETE]

+ Request (application/json)

        {
            "links": [{
                "type": "copy",
                "id": 1
            }]
        }
        
+ Response 204

    + Headers
    
            Location: /products/4/links

## Copy Links [/products/{sku_id}/copies]

### List All linked Copies [GET]

+ Response 200 (application/json)

        {
            "owner": 1,
           
        }
