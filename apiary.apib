FORMAT: 1A
HOST: http://server.aouk.co.uk/api/v1

# AO Core API

AO is a simple API allowing consumers to view products and items.

# AO API Root [/]

This resource does not have any attributes. Instead it offers the initial
API affordances in the form of the links in the JSON body.

It is recommend to follow the “url” link values,
[Link](https://tools.ietf.org/html/rfc5988) or Location headers where
applicable to retrieve resources. Instead of constructing your own URLs,
to keep your client decoupled from implementation details.

## Retrieve the Entry Point [GET]

+ Response 200 (application/json)

        {
            "product_url": "/products",
            "copy_url": "/copies",
            "price_url": "/prices",
            "picture_url": "/pictures",
        }

## Group Copy

Resources related to copies in the API.

## Copies Collection [/copies?limit={limit_num}&offset={offset_num}&profile={profile_name}]

+ length
+ offset
+ total
+ copies - An array of Copy objects.

+ Parameters
    + limit_num (optional, number, `10`) ... limit 
    + offset_num (optional, number, `0`) ... offset
    + profile_name (optional, string, `hotels`) ... profile

### List All Copies [GET]
+ Response 200 (application/json)

    + Headers
        
            Link: </copies?limit=10&offset=10&profile=hotels>; rel="next"
            
    + Body

                {
                    "length": 3,
                    "offset": 0,
                    "total": 3,
                    "copies": [{
                            "id": 1,
                            "name": "copy_name_1",
                            "fields": [
                                "Content" : “copy example 1”,
                                "Language" : "en",
                                "Comments" : ""  
                            ]
                    }, {
                            "id": 2,
                            "name": "copy_name_2",
                            "fields": [
                                "Content" : “copy example 2”,
                                "Language" : "en",
                                "Comments" : ""  
                            ]
                    }, {
                            "id": 3,
                            "name": "copy_name_3",
                            "fields": [
                                "Content" : “copy example 3”,
                                "Language" : "en",
                                "Comments" : ""  
                            ]
                    }]
                }

## Retrive a Copy by id [/copies/{copy_id}?profile={profile_name}]

+ id - serial number of copy.
+ name - name of copy.
+ fields - An array of copy fields.

+ Parameters
    + copy_id (required, number, `1`) ... Serial Number of the Copy
    + profile_name (optional, string, `hotels`) ... profile

### View a Copy Datail [GET]
+ Response 200 (application/json)

        {
            "id": 1,
            "name": "copy_name_1",
            "fields": [
                "Content" : “copy example 1”,
                "Language" : "en",
                "Comments" : ""  
            ]
        }

## Retrive a Copy by name [/copies/{copy_name}/name?profile={profile_name}]

May return many copies!

+ id - serial number of copy.
+ name - name of copy.
+ fields - An array of copy fields.

+ Parameters
    + copy_name (required, string, `copy_name_1`) ... Name of the Copy
    + profile_name (optional, string, `hotels`) ... profile

### View a Copy Datail [GET]
+ Response 200 (application/json)

        {
            "id": 1,
            "name": "copy_name_1",
            "fields": [
                "Content" : “copy example 1”,
                "Language" : "en",
                "Comments" : ""  
            ]
        }

## Create a new Copy [/copies]

### Create a New Copy [POST]

+ Request (application/json)

    + Body
        
            {
                "name": "copy_name_4",
                "fields": [
                    "Content" : “copy example 4”,
                    "Language" : "en",
                    "Comments" : ""  
                ]
            }
    
+ Response 201

    + Headers
            
            Location: /copies/4

## Update/Delete a Copy [/copies/{copy_id}]

+ Parameters
    + copy_id (required, number, `3`) ... Serial Number of Copy

### Update a Copy [PUT]

+ Request (application/json)

    + Body
    
            {
                "fields": [
                    "Content" : “copy example 3 Updated”
                ]
            }
        
+ Response 200

    + Headers
    
            Location: /copies/3

### Delete a Copy [DELETE]

+ Response 200

